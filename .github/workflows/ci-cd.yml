name: CI/CD Pipeline for Brikol

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # Configuration de Node.js pour le frontend
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Install dependencies (Frontend)
        working-directory: ./frontend
        run: npm install

      - name: Run tests (Frontend)
        working-directory: ./frontend
        run: npm test

      - name: Build Frontend
        working-directory: ./frontend
        run: npm run build

      # Compilation du backend avec Java 22
      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: 22
          distribution: temurin

      - name: Build Backend with Maven
        working-directory: ./backend
        run: mvn clean package -DskipTests

      - name: Run tests (Backend)
        working-directory: ./backend
        run: mvn test

      # Build images Docker
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Docker Images
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/brikol-backend:latest ./backend
          docker build -t ${{ secrets.DOCKER_USERNAME }}/brikol-frontend:latest ./frontend
          docker push ${{ secrets.DOCKER_USERNAME }}/brikol-backend:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/brikol-frontend:latest

  deploy:
    name: Deploy to Codespaces
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Deploy using Docker Compose
        run: |
          docker-compose -f docker-compose.yml pull
          docker-compose -f docker-compose.yml up -d
